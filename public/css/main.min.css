@charset "UTF-8";*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,ol[class],p,ul[class]{margin:0}body{min-height:100vh;scroll-behavior:smooth;text-rendering:optimizeSpeed}ol[class],ul[class]{list-style:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img{max-width:100%;display:block}article>*+*{margin-top:1em}button,input,select,textarea{font:inherit}a{text-decoration:none;color:inherit}button{border:0}@font-face{font-family:"Montserrat";src:url(../font/Montserrat.ttf) format("truetype"),url(../font/Montserrat.eot) format("embedded-opentype"),url(../font/Montserrat.woff) format("woff"),url(../font/Montserrat.woff2) format("woff2")}@font-face{font-family:"Oswald";src:url(../font/Oswald.ttf) format("truetype"),url(../font/Oswald.eot) format("embedded-opentype"),url(../font/Oswald.woff) format("woff"),url(../font/Oswald.woff2) format("woff2")}.title{font:400 64px/117% "Oswald"}.category{font:400 28px/146% "Oswald"}.card{font:400 18px/150% "Oswald"}.text,body{font:400 18px/122% "Montserrat"}.display{font:400 33px/100% "Oswald"}body{background:#fff;color:#000}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:100%}.main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}[class*=__container]{max-width:1330px;margin:0 auto;padding:0 15px}svg{height:24px;width:24px}.header__logo{-webkit-transition:-webkit-transform .3s ease;-o-transition:transform .3s ease;transition:transform .3s ease;transition:transform .3s ease,-webkit-transform .3s ease}.header .action:hover,.header__logo:hover{-webkit-transform:scale(107%);-ms-transform:scale(107%);transform:scale(107%)}.header{margin:20px 0}.header__actions,.header__container,.menu{display:-webkit-box;display:-ms-flexbox;display:flex}.header__container{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__actions,.menu{gap:42px}.header .action{display:block}.menu{gap:60px}.header .action,.menu__item{-webkit-transition:-webkit-transform .3s ease;-o-transition:transform .3s ease;transition:transform .3s ease;transition:transform .3s ease,-webkit-transform .3s ease}.menu__item:hover{-webkit-transform:scale(107%);-ms-transform:scale(107%);transform:scale(107%)}@media (prefers-reduced-motion:reduce){*{-webkit-animation-duration:.01ms!important;animation-duration:.01ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;-webkit-transition-duration:.01ms!important;-o-transition-duration:.01ms!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwibWFpbi5taW4uY3NzIiwiYmFzZS9fcmVzZXQuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsImxheW91dC9faGVhZGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJDSUEsQyxDQUVBLE8sQ0FEQSxRLENEQ0EsNkIsQ0NFRSxxQixDQU1GLFMsQ0RGQSxTLENFQ0EsUyxDRm1CQSxVLENDWkEsSSxDQ2FBLEUsQ0RDQSxFLENBRkEsVSxDQURBLE0sQ0FWQSxFLENBQ0EsRSxDQUNBLEUsQ0FDQSxFLENBQ0EsRSxDQUNBLEUsQ0FJQSxFLENBREEsUyxDQUZBLEMsQ0FDQSxTLENDTUEsUSxDRE9BLEksQ0NEQSxnQixDQUNBLHNCLENER0UsNEIsQ0FNRixTLENDSEEsUyxDRElFLGUsQ0FLRixNQ0hFLFEsQ0FDQSxnQyxDRkVGLDZCLENBS0EsRyxDQ0dFLGMsQ0NGRixhLENEUUEsVyxDRERBLGMsQ0NRQSxNLENBREEsSyxDQUdBLE0sQ0FEQSxRLENBRUUsWSxDQ0NGLEMsQ0FDSSxvQixDQUNBLGEsQ0FHSixNLENBQ0ksUSxDQ3JGSixXQUNJLHdCLENBQ0EscU0sQUZpR0osV0V4Rkksb0IsQ0hvRkoscUxDU0EsTSxDRW5GSSwyQixDRnVGSixTLENFbkZBLDJCLENGdUZBLEssQ0VuRkksMkIsQ0FHSixLLENGcUZBLEksQ0VuRkksK0IsQ0hpRkosUSxDQ09FLDJCLENBR0YsSSxDRWxGSSxlLENBQ0EsVSxDQUdKLFEsQ0FDSSxtQixDQUNBLG1CLENBQ0EsWSxDQUNBLDJCLENBQ0EsNEIsQ0g4RUoseUIsQ0NPRSxxQixDR3RJRixlLENKb0lBLEssQ0NPRSxrQixDR2xJRixpQixDQUNJLGEsQ0hzSUosb0IsQ0dySUksZ0IsQ0h1SUYsYSxDQUNBLGMsQ0FHRixHLENHdklBLFcsQ0FDSSxVLENKOEhKLGEsQ0NjRSw2QyxDR3JJRSxnQyxDQUVBLDZCLENBQ0Esd0QsQ0grS0oscUIsQ0c1S0EsbUIsQ0FDSSw2QixDQUNBLHlCLENKMEhKLHFCLENDZ0JBLE8sQ0l6S1EsYSxDSnlMUixnQixDQVpBLGtCLENER0EsSyxDS3BLUSxtQixDQUNBLG1CLENKK0tOLFksQ0FmRixrQixDQUlFLHdCLENBQ0EscUIsQ0RsQkYsNkIsQ0t6Skksd0IsQ0FDSSxxQixDTDJKUixrQixDQ3NCQSxnQixDRFRBLEssQ0NhRSxRLENBR0YsZSxDRHhCQSxhLENBUUEsSyxDQ21DRSxRLENBbkJGLGUsQ0kvSkksVyxDQUNJLDZDLENBQUEsZ0MsQ0FDQSw2QixDTHFKUix3RCxDQ3NDQSxpQixDSXZMUSw2QixDQUFBLHlCLENBQUEscUIsQ0x3SlIsdUNDMENFLEMsQ0R4Q0YsMEMsQ0MwQ0ksa0MsQ0R4Q0gsNkMsQ0MwQ0cscUMsQ0R4Q0osMkMsQ0MwQ0ksc0MsQ0R4Q0osbUMsQ0MwQ0ksZ0MiLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyog0KPQutCw0LfRi9Cy0LDQtdC8IGJveCBzaXppbmcgKi9cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qINCj0LHQuNGA0LDQtdC8INCy0L3Rg9GC0YDQtdC90L3QuNC1INC+0YLRgdGC0YPQv9GLICovXG51bFtjbGFzc10sXG5vbFtjbGFzc10ge1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKiDQo9Cx0LjRgNCw0LXQvCDQstC90LXRiNC90LjQtSDQvtGC0YHRgtGD0L/RiyAqL1xuYm9keSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAsXG51bFtjbGFzc10sXG5vbFtjbGFzc10sXG5saSxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5ibG9ja3F1b3RlLFxuZGwsXG5kZCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyog0JLRi9GB0YLQsNCy0LvRj9C10Lwg0L7RgdC90L7QstC90YvQtSDQvdCw0YHRgtGA0L7QudC60Lgg0L/Qvi3Rg9C80L7Qu9GH0LDQvdC40Y4g0LTQu9GPIGJvZHkgKi9cbmJvZHkge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZVNwZWVkO1xufVxuXG4vKiDQo9C00LDQu9GP0LXQvCDRgdGC0LDQvdC00LDRgNGC0L3Rg9GOINGB0YLQuNC70LjQt9Cw0YbQuNGOINC00LvRjyDQstGB0LXRhSB1bCDQuCBpbCwg0YMg0LrQvtGC0L7RgNGL0YUg0LXRgdGC0Ywg0LDRgtGA0LjQsdGD0YIgY2xhc3MqL1xudWxbY2xhc3NdLFxub2xbY2xhc3NdIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyog0K3Qu9C10LzQtdC90YLRiyBhLCDRgyDQutC+0YLQvtGA0YvRhSDQvdC10YIg0LrQu9Cw0YHRgdCwLCDRgdCx0YDQsNGB0YvQstCw0LXQvCDQtNC+INC00LXRhNC+0LvRgtC90YvRhSDRgdGC0LjQu9C10LkgKi9cbmE6bm90KFtjbGFzc10pIHtcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBhdXRvO1xufVxuXG4vKiDQo9C/0YDQvtGJ0LDQtdC8INGA0LDQsdC+0YLRgyDRgSDQuNC30L7QsdGA0LDQttC10L3QuNGP0LzQuCAqL1xuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyog0KPQutCw0LfRi9Cy0LDQtdC8INC/0L7QvdGP0YLQvdGD0Y4g0L/QtdGA0LjQvtC00LjRh9C90L7RgdGC0Ywg0LIg0L/QvtGC0L7QutC1INC00LDQvdC90YvRhSDRgyBhcnRpY2xlKi9cbmFydGljbGUgPiAqICsgKiB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLyog0J3QsNGB0LvQtdC00YPQtdC8INGI0YDQuNGE0YLRiyDQtNC70Y8g0LjQvdC/0YPRgtC+0LIg0Lgg0LrQvdC+0L/QvtC6ICovXG5pbnB1dCxcbmJ1dHRvbixcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuLyog0KPQtNCw0LvRj9C10Lwg0LLRgdC1INCw0L3QuNC80LDRhtC40Lgg0Lgg0L/QtdGA0LXRhdC+0LTRiyDQtNC70Y8g0LvRjtC00LXQuSwg0LrQvtGC0L7RgNGL0LUg0L/RgNC10LTQv9C+0YfQuNGC0LDQuSDQuNGFINC90LUg0LjRgdC/0L7Qu9GM0LfQvtCy0LDRgtGMICovXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xuICAqIHtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcbiAgICBzY3JvbGwtYmVoYXZpb3I6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxufVxuLyog0KPQtNCw0LvQtdC90LjQtSDQtNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9GFINGB0YLQuNC70LXQuSAqL1xuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQuZW90XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiT3N3YWxkXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9Pc3dhbGQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250L09zd2FsZC5lb3RcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvT3N3YWxkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9Pc3dhbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG59XG4udGl0bGUge1xuICBmb250LWZhbWlseTogXCJPc3dhbGRcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiA2NHB4O1xuICBsaW5lLWhlaWdodDogMTE3JTtcbn1cblxuLmNhdGVnb3J5IHtcbiAgZm9udC1mYW1pbHk6IFwiT3N3YWxkXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgbGluZS1oZWlnaHQ6IDE0NiU7XG59XG5cbi5jYXJkIHtcbiAgZm9udC1mYW1pbHk6IFwiT3N3YWxkXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6IDE1MCU7XG59XG5cbi50ZXh0LCBib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxMjIlO1xufVxuXG4uZGlzcGxheSB7XG4gIGZvbnQtZmFtaWx5OiBcIk9zd2FsZFwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMzNweDtcbiAgbGluZS1oZWlnaHQ6IDEwMCU7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIGNvbG9yOiByZ2IoMCwgMCwgMCk7XG59XG5cbi53cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLWhlaWdodDogMTAwJTtcbn1cblxuLm1haW4ge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxuW2NsYXNzKj1fX2NvbnRhaW5lcl0ge1xuICBtYXgtd2lkdGg6IDEzMzBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMTVweDtcbn1cblxuc3ZnIHtcbiAgaGVpZ2h0OiAyNHB4O1xuICB3aWR0aDogMjRweDtcbn1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG59XG4uaGVhZGVyX19sb2dvOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxMDclKTtcbn1cbi5oZWFkZXIge1xuICBtYXJnaW46IDIwcHggMHB4O1xufVxuLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmhlYWRlcl9fYWN0aW9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogNDJweDtcbn1cbi5oZWFkZXIgLmFjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xufVxuLmhlYWRlciAuYWN0aW9uOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxMDclKTtcbn1cblxuLm1lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDYwcHg7XG59XG4ubWVudV9faXRlbSB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG59XG4ubWVudV9faXRlbTpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMTA3JSk7XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG4gQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2Upe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8qINCj0LrQsNC30YvQstCw0LXQvCBib3ggc2l6aW5nICovXG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLyog0KPQsdC40YDQsNC10Lwg0LLQvdGD0YLRgNC10L3QvdC40LUg0L7RgtGB0YLRg9C/0YsgKi9cblxudWxbY2xhc3NdLFxub2xbY2xhc3NdIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLyog0KPQsdC40YDQsNC10Lwg0LLQvdC10YjQvdC40LUg0L7RgtGB0YLRg9C/0YsgKi9cblxuYm9keSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAsXG51bFtjbGFzc10sXG5vbFtjbGFzc10sXG5saSxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5ibG9ja3F1b3RlLFxuZGwsXG5kZCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyog0JLRi9GB0YLQsNCy0LvRj9C10Lwg0L7RgdC90L7QstC90YvQtSDQvdCw0YHRgtGA0L7QudC60Lgg0L/Qvi3Rg9C80L7Qu9GH0LDQvdC40Y4g0LTQu9GPIGJvZHkgKi9cblxuYm9keSB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplU3BlZWQ7XG59XG5cbi8qINCj0LTQsNC70Y/QtdC8INGB0YLQsNC90LTQsNGA0YLQvdGD0Y4g0YHRgtC40LvQuNC30LDRhtC40Y4g0LTQu9GPINCy0YHQtdGFIHVsINC4IGlsLCDRgyDQutC+0YLQvtGA0YvRhSDQtdGB0YLRjCDQsNGC0YDQuNCx0YPRgiBjbGFzcyovXG5cbnVsW2NsYXNzXSxcbm9sW2NsYXNzXSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi8qINCt0LvQtdC80LXQvdGC0YsgYSwg0YMg0LrQvtGC0L7RgNGL0YUg0L3QtdGCINC60LvQsNGB0YHQsCwg0YHQsdGA0LDRgdGL0LLQsNC10Lwg0LTQviDQtNC10YTQvtC70YLQvdGL0YUg0YHRgtC40LvQtdC5ICovXG5cbmE6bm90KFtjbGFzc10pIHtcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogaW5rO1xuICB0ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6IGF1dG87XG59XG5cbi8qINCj0L/RgNC+0YnQsNC10Lwg0YDQsNCx0L7RgtGDINGBINC40LfQvtCx0YDQsNC20LXQvdC40Y/QvNC4ICovXG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qINCj0LrQsNC30YvQstCw0LXQvCDQv9C+0L3Rj9GC0L3Rg9GOINC/0LXRgNC40L7QtNC40YfQvdC+0YHRgtGMINCyINC/0L7RgtC+0LrQtSDQtNCw0L3QvdGL0YUg0YMgYXJ0aWNsZSovXG5cbmFydGljbGUgPiAqICsgKiB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLyog0J3QsNGB0LvQtdC00YPQtdC8INGI0YDQuNGE0YLRiyDQtNC70Y8g0LjQvdC/0YPRgtC+0LIg0Lgg0LrQvdC+0L/QvtC6ICovXG5cbmlucHV0LFxuYnV0dG9uLFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBmb250OiBpbmhlcml0O1xufVxuXG4vKiDQo9C00LDQu9GP0LXQvCDQstGB0LUg0LDQvdC40LzQsNGG0LjQuCDQuCDQv9C10YDQtdGF0L7QtNGLINC00LvRjyDQu9GO0LTQtdC5LCDQutC+0YLQvtGA0YvQtSDQv9GA0LXQtNC/0L7Rh9C40YLQsNC5INC40YUg0L3QtSDQuNGB0L/QvtC70YzQt9C+0LLQsNGC0YwgKi9cblxuLyog0KPQtNCw0LvQtdC90LjQtSDQtNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9GFINGB0YLQuNC70LXQuSAqL1xuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuYnV0dG9uIHtcbiAgYm9yZGVyOiBub25lO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC5lb3RcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk9zd2FsZFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvT3N3YWxkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udC9Pc3dhbGQuZW90XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250L09zd2FsZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnQvT3N3YWxkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuXG4udGl0bGUge1xuICBmb250OiA0MDAgNjRweC8xMTclIFwiT3N3YWxkXCI7XG59XG5cbi5jYXRlZ29yeSB7XG4gIGZvbnQ6IDQwMCAyOHB4LzE0NiUgXCJPc3dhbGRcIjtcbn1cblxuLmNhcmQge1xuICBmb250OiA0MDAgMThweC8xNTAlIFwiT3N3YWxkXCI7XG59XG5cbi50ZXh0LFxuYm9keSB7XG4gIGZvbnQ6IDQwMCAxOHB4LzEyMiUgXCJNb250c2VycmF0XCI7XG59XG5cbi5kaXNwbGF5IHtcbiAgZm9udDogbm9ybWFsIDQwMCAzM3B4LzEwMCUgXCJPc3dhbGRcIjtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQ6IHJnYigyNTUsIDI1NSwgMjU1KTtcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcbn1cblxuLndyYXBwZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLWhlaWdodDogMTAwJTtcbn1cblxuLm1haW4ge1xuICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAtbXMtZmxleDogMSAxIGF1dG87XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG5bY2xhc3MqPV9fY29udGFpbmVyXSB7XG4gIG1heC13aWR0aDogMTMzMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxNXB4O1xufVxuXG5zdmcge1xuICBoZWlnaHQ6IDI0cHg7XG4gIHdpZHRoOiAyNHB4O1xufVxuXG4uaGVhZGVyX19sb2dvIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgLW8tdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMC4zcyBlYXNlO1xufVxuXG4uaGVhZGVyX19sb2dvOmhvdmVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEwNyUpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxMDclKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxMDclKTtcbn1cblxuLmhlYWRlciB7XG4gIG1hcmdpbjogMjBweCAwcHg7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyX19hY3Rpb25zIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDQycHg7XG59XG5cbi5oZWFkZXIgLmFjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4zcyBlYXNlO1xuICAtby10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLCAtd2Via2l0LXRyYW5zZm9ybSAwLjNzIGVhc2U7XG59XG5cbi5oZWFkZXIgLmFjdGlvbjpob3ZlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxMDclKTtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMTA3JSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMTA3JSk7XG59XG5cbi5tZW51IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDYwcHg7XG59XG5cbi5tZW51X19pdGVtIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgLW8tdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSwgLXdlYmtpdC10cmFuc2Zvcm0gMC4zcyBlYXNlO1xufVxuXG4ubWVudV9faXRlbTpob3ZlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxMDclKTtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMTA3JSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMTA3JSk7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxuXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xuICAqIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxICFpbXBvcnRhbnQ7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcbiAgICAtby10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcbiAgICBzY3JvbGwtYmVoYXZpb3I6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cclxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW0xaGFXNHVZM056SWl3aVltRnpaUzlmY21WelpYUXVjMk56Y3lJc0ltSmhjMlV2WDNSNWNHOW5jbUZ3YUhrdWMyTnpjeUlzSW1KaGMyVXZYMkpoYzJVdWMyTnpjeUlzSW1GaWMzUnlZV04wY3k5ZmRtRnlhV0ZpYkdWekxuTmpjM01pTENKc1lYbHZkWFF2WDJobFlXUmxjaTV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMR2RDUVVGblFqdEJRMEZvUWl4NVFrRkJRVHRCUVVOQk96czdSVUZIUlN3NFFrRkJRVHRWUVVGQkxITkNRVUZCTzBGRVJVWTdPMEZEUTBFc0swSkJRVUU3UVVGRFFUczdSVUZGUlN4VlFVRkJPMEZFUlVZN08wRkRRMEVzTkVKQlFVRTdRVUZEUVRzN096czdPenM3T3pzN096czdPenRGUVdkQ1JTeFRRVUZCTzBGRVJVWTdPMEZEUTBFc2QwUkJRVUU3UVVGRFFUdEZRVU5GTEdsQ1FVRkJPMFZCUTBFc2RVSkJRVUU3UlVGRFFTdzJRa0ZCUVR0QlJFVkdPenRCUTBOQkxHbEdRVUZCTzBGQlEwRTdPMFZCUlVVc1owSkJRVUU3UVVSRlJqczdRVU5EUVN4eFJVRkJRVHRCUVVOQk8wVkJRMFVzYVVOQlFVRTdWVUZCUVN3NFFrRkJRVHRCUkVWR096dEJRME5CTEc5RFFVRkJPMEZCUTBFN1JVRkRSU3hsUVVGQk8wVkJRMEVzWTBGQlFUdEJSRVZHT3p0QlEwTkJMRGhFUVVGQk8wRkJRMEU3UlVGRFJTeGxRVUZCTzBGRVJVWTdPMEZEUTBFc01FTkJRVUU3UVVGRFFUczdPenRGUVVsRkxHRkJRVUU3UVVSRlJqczdRVU5EUVN4elJrRkJRVHRCUVVOQk8wVkJRMFU3U1VGRFJTdzJRMEZCUVR0WlFVRkJMSEZEUVVGQk8wbEJRMEVzSzBOQlFVRTdXVUZCUVN4MVEwRkJRVHRKUVVOQkxEaERRVUZCTzFOQlFVRXNlVU5CUVVFN1dVRkJRU3h6UTBGQlFUdEpRVU5CTEdkRFFVRkJPMFZFUlVZN1FVRkRSanRCUTBOQkxHMURRVUZCTzBGQlEwRTdSVUZEU1N4eFFrRkJRVHRGUVVOQkxHTkJRVUU3UVVSRFNqczdRVU5GUVR0RlFVTkpMRmxCUVVFN1FVUkRTanM3UVVWMFJrRTdSVUZEU1N4NVFrRkJRVHRGUVVOQkxHZE9RVUZCTzBGR2VVWktPMEZGYkVaQk8wVkJRMGtzY1VKQlFVRTdSVUZEUVN4blRVRkJRVHRCUm05R1NqdEJSVGRGUVR0RlFVTkpMSEZDUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UVVZclJVbzdPMEZGTlVWQk8wVkJRMGtzY1VKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeHBRa0ZCUVR0QlJpdEZTanM3UVVVMVJVRTdSVUZEU1N4eFFrRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMR2xDUVVGQk8wRkdLMFZLT3p0QlJUTkZRVHRGUVVOSkxIbENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzYVVKQlFVRTdRVVk0UlVvN08wRkZNMFZCTzBWQlEwa3NjVUpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHbENRVUZCTzBGR09FVktPenRCUnk5SVFUdEZRVVZKTERoQ1EwTkpPMFZFUVVvc2JVSkRSRWs3UVVwclNWSTdPMEZITTBoQk8wVkJRMGtzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTdzBRa0ZCUVR0RlFVRkJMRFpDUVVGQk8wMUJRVUVzTUVKQlFVRTdWVUZCUVN4elFrRkJRVHRGUVVOQkxHZENRVUZCTzBGSU9FaEtPenRCUnpOSVFUdEZRVU5KTEcxQ1FVRkJPMDFCUVVFc2EwSkJRVUU3VlVGQlFTeGpRVUZCTzBGSU9FaEtPenRCUjNoSVFUdEZRVU5KTEdsQ1FVRkJPMFZCUlVFc1kwRkJRVHRGUVVOQkxHVkJRVUU3UVVnd1NFbzdPMEZIZGtoQk8wVkJRMGtzV1VOMFFsRTdSVVIxUWxJc1YwTjJRbEU3UVVwcFNsbzdPMEZMTVVwSk8wVkJRMGtzSzBORWFVSmhPMFZEYWtKaUxIVkRSR2xDWVR0RlEycENZaXhyUTBScFFtRTdSVU5xUW1Jc0swSkVhVUpoTzBWRGFrSmlMRFJFUkdsQ1lUdEJTalJKY2tJN1FVc3hTa2s3UlVGRFNTdzRRa1JqWVR0TlEyUmlMREJDUkdOaE8xVkRaR0lzYzBKRVkyRTdRVW80U1hKQ08wRkxla3BKTzBWQlEwa3NaMEpCUVVFN1FVd3lTbEk3UVV0NFNrazdSVUZEU1N4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN3NFFrRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEJUREJLVWp0QlMzWktTVHRGUVVOSkxHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzVTBGQlFUdEJUSGxLVWp0QlMzUktTVHRGUVVOSkxHTkJRVUU3UlVGRFFTd3JRMFJRWVR0RlEwOWlMSFZEUkZCaE8wVkRUMklzYTBORVVHRTdSVU5QWWl3clFrUlFZVHRGUTA5aUxEUkVSRkJoTzBGS0swcHlRanRCUzNKS1NUdEZRVU5KTERoQ1JGWmhPMDFEVldJc01FSkVWbUU3VlVOVllpeHpRa1JXWVR0QlNtbExja0k3TzBGTGJFcEpPMFZCUTBrc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3hUUVVGQk8wRk1jVXBTTzBGTGJFcEpPMFZCUTBrc0swTkVkRUpoTzBWRGMwSmlMSFZEUkhSQ1lUdEZRM05DWWl4clEwUjBRbUU3UlVOelFtSXNLMEpFZEVKaE8wVkRjMEppTERSRVJIUkNZVHRCU2pCTGNrSTdRVXRxU2trN1JVRkRTU3c0UWtSNlFtRTdUVU41UW1Jc01FSkVla0poTzFWRGVVSmlMSE5DUkhwQ1lUdEJTalJMY2tJN1FVRkRRVHM3UVVGRlFUczdRMEZGUXpzN1FVRkZSRHM3UVVGRlFUczdRVUZGUVNJc0ltWnBiR1VpT2lKdFlXbHVMbU56Y3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklrQmphR0Z5YzJWMElGd2lWVlJHTFRoY0lqdGNiaThxSU5DajBMclFzTkMzMFl2UXN0Q3cwTFhRdkNCaWIzZ2djMmw2YVc1bklDb3ZYRzRxTEZ4dUtqbzZZbVZtYjNKbExGeHVLam82WVdaMFpYSWdlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1ZlZ4dVhHNHZLaURRbzlDeDBMalJnTkN3MExYUXZDRFFzdEM5MFlQUmd0R0EwTFhRdmRDOTBMalF0U0RRdnRHQzBZSFJndEdEMEwvUml5QXFMMXh1ZFd4YlkyeGhjM05kTEZ4dWIyeGJZMnhoYzNOZElIdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JuMWNibHh1THlvZzBLUFFzZEM0MFlEUXNOQzEwTHdnMExMUXZkQzEwWWpRdmRDNDBMVWcwTDdSZ3RHQjBZTFJnOUMvMFlzZ0tpOWNibUp2Wkhrc1hHNW9NU3hjYm1neUxGeHVhRE1zWEc1b05DeGNibWcxTEZ4dWFEWXNYRzV3TEZ4dWRXeGJZMnhoYzNOZExGeHViMnhiWTJ4aGMzTmRMRnh1Ykdrc1hHNW1hV2QxY21Vc1hHNW1hV2RqWVhCMGFXOXVMRnh1WW14dlkydHhkVzkwWlN4Y2JtUnNMRnh1WkdRZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc1OVhHNWNiaThxSU5DUzBZdlJnZEdDMExEUXN0QzcwWS9RdGRDOElOQyswWUhRdmRDKzBMTFF2ZEdMMExVZzBMM1FzTkdCMFlMUmdOQyswTG5RdXRDNElOQy8wTDR0MFlQUXZOQyswTHZSaDlDdzBMM1F1TkdPSU5DMDBMdlJqeUJpYjJSNUlDb3ZYRzVpYjJSNUlIdGNiaUFnYldsdUxXaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lITmpjbTlzYkMxaVpXaGhkbWx2Y2pvZ2MyMXZiM1JvTzF4dUlDQjBaWGgwTFhKbGJtUmxjbWx1WnpvZ2IzQjBhVzFwZW1WVGNHVmxaRHRjYm4xY2JseHVMeW9nMEtQUXROQ3cwTHZSajlDMTBMd2cwWUhSZ3RDdzBMM1F0TkN3MFlEUmd0QzkwWVBSamlEUmdkR0MwTGpRdTlDNDBMZlFzTkdHMExqUmppRFF0TkM3MFk4ZzBMTFJnZEMxMFlVZ2RXd2cwTGdnYVd3c0lOR0RJTkM2MEw3Umd0QyswWURSaTlHRklOQzEwWUhSZ3RHTUlOQ3cwWUxSZ05DNDBMSFJnOUdDSUdOc1lYTnpLaTljYm5Wc1cyTnNZWE56WFN4Y2JtOXNXMk5zWVhOelhTQjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNiaThxSU5DdDBMdlF0ZEM4MExYUXZkR0MwWXNnWVN3ZzBZTWcwTHJRdnRHQzBMN1JnTkdMMFlVZzBMM1F0ZEdDSU5DNjBMdlFzTkdCMFlIUXNDd2cwWUhRc2RHQTBMRFJnZEdMMExMUXNOQzEwTHdnMExUUXZpRFF0TkMxMFlUUXZ0QzcwWUxRdmRHTDBZVWcwWUhSZ3RDNDBMdlF0ZEM1SUNvdlhHNWhPbTV2ZENoYlkyeGhjM05kS1NCN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJpMXphMmx3TFdsdWF6b2dZWFYwYnp0Y2JuMWNibHh1THlvZzBLUFF2OUdBMEw3UmlkQ3cwTFhRdkNEUmdOQ3cwTEhRdnRHQzBZTWcwWUVnMExqUXQ5QyswTEhSZ05DdzBMYlF0ZEM5MExqUmo5QzgwTGdnS2k5Y2JtbHRaeUI3WEc0Z0lHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNTlYRzVjYmk4cUlOQ2owTHJRc05DMzBZdlFzdEN3MExYUXZDRFF2OUMrMEwzUmo5R0MwTDNSZzlHT0lOQy8wTFhSZ05DNDBMN1F0TkM0MFlmUXZkQyswWUhSZ3RHTUlOQ3lJTkMvMEw3Umd0QyswTHJRdFNEUXROQ3cwTDNRdmRHTDBZVWcwWU1nWVhKMGFXTnNaU292WEc1aGNuUnBZMnhsSUQ0Z0tpQXJJQ29nZTF4dUlDQnRZWEpuYVc0dGRHOXdPaUF4WlcwN1hHNTlYRzVjYmk4cUlOQ2QwTERSZ2RDNzBMWFF0TkdEMExYUXZDRFJpTkdBMExqUmhOR0MwWXNnMExUUXU5R1BJTkM0MEwzUXY5R0QwWUxRdnRDeUlOQzRJTkM2MEwzUXZ0Qy8wTDdRdWlBcUwxeHVhVzV3ZFhRc1hHNWlkWFIwYjI0c1hHNTBaWGgwWVhKbFlTeGNibk5sYkdWamRDQjdYRzRnSUdadmJuUTZJR2x1YUdWeWFYUTdYRzU5WEc1Y2JpOHFJTkNqMExUUXNOQzcwWS9RdGRDOElOQ3kwWUhRdFNEUXNOQzkwTGpRdk5DdzBZYlF1TkM0SU5DNElOQy8wTFhSZ05DMTBZWFF2dEMwMFlzZzBMVFF1OUdQSU5DNzBZN1F0TkMxMExrc0lOQzYwTDdSZ3RDKzBZRFJpOUMxSU5DLzBZRFF0ZEMwMEwvUXZ0R0gwTGpSZ3RDdzBMa2cwTGpSaFNEUXZkQzFJTkM0MFlIUXY5QyswTHZSak5DMzBMN1FzdEN3MFlMUmpDQXFMMXh1UUcxbFpHbGhJQ2h3Y21WbVpYSnpMWEpsWkhWalpXUXRiVzkwYVc5dU9pQnlaV1IxWTJVcElIdGNiaUFnS2lCN1hHNGdJQ0FnWVc1cGJXRjBhVzl1TFdSMWNtRjBhVzl1T2lBd0xqQXhiWE1nSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0JoYm1sdFlYUnBiMjR0YVhSbGNtRjBhVzl1TFdOdmRXNTBPaUF4SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnZEhKaGJuTnBkR2x2Ymkxa2RYSmhkR2x2YmpvZ01DNHdNVzF6SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnYzJOeWIyeHNMV0psYUdGMmFXOXlPaUJoZFhSdklDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JuMWNiaThxSU5DajBMVFFzTkM3MExYUXZkQzQwTFVnMExUUXZ0Qy8wTDdRdTlDOTBMalJndEMxMEx2UmpOQzkwWXZSaFNEUmdkR0MwTGpRdTlDMTBMa2dLaTljYm1FZ2UxeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNGdJR052Ykc5eU9pQnBibWhsY21sME8xeHVmVnh1WEc1aWRYUjBiMjRnZTF4dUlDQmliM0prWlhJNklHNXZibVU3WEc1OVhHNWNia0JtYjI1MExXWmhZMlVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKTmIyNTBjMlZ5Y21GMFhDSTdYRzRnSUhOeVl6b2dkWEpzS0Z3aUxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExuUjBabHdpS1NCbWIzSnRZWFFvWENKMGNuVmxkSGx3WlZ3aUtTd2dkWEpzS0Z3aUxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExtVnZkRndpS1NCbWIzSnRZWFFvWENKbGJXSmxaR1JsWkMxdmNHVnVkSGx3WlZ3aUtTd2dkWEpzS0Z3aUxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExuZHZabVpjSWlrZ1ptOXliV0YwS0Z3aWQyOW1abHdpS1N3Z2RYSnNLRndpTGk0dlptOXVkQzlOYjI1MGMyVnljbUYwTG5kdlptWXlYQ0lwSUdadmNtMWhkQ2hjSW5kdlptWXlYQ0lwTzF4dWZWeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWs5emQyRnNaRndpTzF4dUlDQnpjbU02SUhWeWJDaGNJaTR1TDJadmJuUXZUM04zWVd4a0xuUjBabHdpS1NCbWIzSnRZWFFvWENKMGNuVmxkSGx3WlZ3aUtTd2dkWEpzS0Z3aUxpNHZabTl1ZEM5UGMzZGhiR1F1Wlc5MFhDSXBJR1p2Y20xaGRDaGNJbVZ0WW1Wa1pHVmtMVzl3Wlc1MGVYQmxYQ0lwTENCMWNtd29YQ0l1TGk5bWIyNTBMMDl6ZDJGc1pDNTNiMlptWENJcElHWnZjbTFoZENoY0luZHZabVpjSWlrc0lIVnliQ2hjSWk0dUwyWnZiblF2VDNOM1lXeGtMbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDaGNJbmR2Wm1ZeVhDSXBPMXh1ZlZ4dUxuUnBkR3hsSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVQzTjNZV3hrWENJN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUdadmJuUXRjMmw2WlRvZ05qUndlRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV4TnlVN1hHNTlYRzVjYmk1allYUmxaMjl5ZVNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrOXpkMkZzWkZ3aU8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNCbWIyNTBMWE5wZW1VNklESTRjSGc3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TkRZbE8xeHVmVnh1WEc0dVkyRnlaQ0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWs5emQyRnNaRndpTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0JtYjI1MExYTnBlbVU2SURFNGNIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhOVEFsTzF4dWZWeHVYRzR1ZEdWNGRDd2dZbTlrZVNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJanRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2JpQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01USXlKVHRjYm4xY2JseHVMbVJwYzNCc1lYa2dlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pQYzNkaGJHUmNJanRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNCbWIyNTBMWE5wZW1VNklETXpjSGc3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TURBbE8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ1ltRmphMmR5YjNWdVpEb2djbWRpS0RJMU5Td2dNalUxTENBeU5UVXBPMXh1SUNCamIyeHZjam9nY21kaUtEQXNJREFzSURBcE8xeHVmVnh1WEc0dWQzSmhjSEJsY2lCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJRzFwYmkxb1pXbG5hSFE2SURFd01DVTdYRzU5WEc1Y2JpNXRZV2x1SUh0Y2JpQWdabXhsZURvZ01TQXhJR0YxZEc4N1hHNTlYRzVjYmx0amJHRnpjeW85WDE5amIyNTBZV2x1WlhKZElIdGNiaUFnYldGNExYZHBaSFJvT2lBeE16TXdjSGc3WEc0Z0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dUlDQndZV1JrYVc1bk9pQXdJREUxY0hnN1hHNTlYRzVjYm5OMlp5QjdYRzRnSUdobGFXZG9kRG9nTWpSd2VEdGNiaUFnZDJsa2RHZzZJREkwY0hnN1hHNTlYRzVjYmk1b1pXRmtaWEpmWDJ4dloyOGdlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdNQzR6Y3lCbFlYTmxPMXh1ZlZ4dUxtaGxZV1JsY2w5ZmJHOW5ienBvYjNabGNpQjdYRzRnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTVRBM0pTazdYRzU5WEc0dWFHVmhaR1Z5SUh0Y2JpQWdiV0Z5WjJsdU9pQXlNSEI0SURCd2VEdGNibjFjYmk1b1pXRmtaWEpmWDJOdmJuUmhhVzVsY2lCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYm4xY2JpNW9aV0ZrWlhKZlgyRmpkR2x2Ym5NZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JuWVhBNklEUXljSGc3WEc1OVhHNHVhR1ZoWkdWeUlDNWhZM1JwYjI0Z2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElEQXVNM01nWldGelpUdGNibjFjYmk1b1pXRmtaWElnTG1GamRHbHZianBvYjNabGNpQjdYRzRnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTVRBM0pTazdYRzU5WEc1Y2JpNXRaVzUxSUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdaMkZ3T2lBMk1IQjRPMXh1ZlZ4dUxtMWxiblZmWDJsMFpXMGdlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdNQzR6Y3lCbFlYTmxPMXh1ZlZ4dUxtMWxiblZmWDJsMFpXMDZhRzkyWlhJZ2UxeHVJQ0IwY21GdWMyWnZjbTA2SUhOallXeGxLREV3TnlVcE8xeHVmVnh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvY0hKbFptVnljeTF5WldSMVkyVmtMVzF2ZEdsdmJqb2djbVZrZFdObEtYdGNibHh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc1Y2JuMWNibHh1ZlZ4dUlpd2lMeW9nMEtQUXV0Q3cwTGZSaTlDeTBMRFF0ZEM4SUdKdmVDQnphWHBwYm1jZ0tpOWNjbHh1S2l4Y2NseHVLam82WW1WbWIzSmxMRnh5WEc0cU9qcGhablJsY2lCN1hISmNiaUFnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNjbHh1ZlZ4eVhHNWNjbHh1THlvZzBLUFFzZEM0MFlEUXNOQzEwTHdnMExMUXZkR0QwWUxSZ05DMTBMM1F2ZEM0MExVZzBMN1JndEdCMFlMUmc5Qy8wWXNnS2k5Y2NseHVkV3hiWTJ4aGMzTmRMRnh5WEc1dmJGdGpiR0Z6YzEwZ2UxeHlYRzRnSUhCaFpHUnBibWM2SURBN1hISmNibjFjY2x4dVhISmNiaThxSU5DajBMSFF1TkdBMExEUXRkQzhJTkN5MEwzUXRkR0kwTDNRdU5DMUlOQyswWUxSZ2RHQzBZUFF2OUdMSUNvdlhISmNibUp2Wkhrc1hISmNibWd4TEZ4eVhHNW9NaXhjY2x4dWFETXNYSEpjYm1nMExGeHlYRzVvTlN4Y2NseHVhRFlzWEhKY2JuQXNYSEpjYm5Wc1cyTnNZWE56WFN4Y2NseHViMnhiWTJ4aGMzTmRMRnh5WEc1c2FTeGNjbHh1Wm1sbmRYSmxMRnh5WEc1bWFXZGpZWEIwYVc5dUxGeHlYRzVpYkc5amEzRjFiM1JsTEZ4eVhHNWtiQ3hjY2x4dVpHUWdlMXh5WEc0Z0lHMWhjbWRwYmpvZ01EdGNjbHh1ZlZ4eVhHNWNjbHh1THlvZzBKTFJpOUdCMFlMUXNOQ3kwTHZSajlDMTBMd2cwTDdSZ2RDOTBMN1FzdEM5MFl2UXRTRFF2ZEN3MFlIUmd0R0EwTDdRdWRDNjBMZ2cwTC9RdmkzUmc5QzgwTDdRdTlHSDBMRFF2ZEM0MFk0ZzBMVFF1OUdQSUdKdlpIa2dLaTljY2x4dVltOWtlU0I3WEhKY2JpQWdiV2x1TFdobGFXZG9kRG9nTVRBd2RtZzdYSEpjYmlBZ2MyTnliMnhzTFdKbGFHRjJhVzl5T2lCemJXOXZkR2c3WEhKY2JpQWdkR1Y0ZEMxeVpXNWtaWEpwYm1jNklHOXdkR2x0YVhwbFUzQmxaV1E3WEhKY2JuMWNjbHh1WEhKY2JpOHFJTkNqMExUUXNOQzcwWS9RdGRDOElOR0IwWUxRc05DOTBMVFFzTkdBMFlMUXZkR0QwWTRnMFlIUmd0QzQwTHZRdU5DMzBMRFJodEM0MFk0ZzBMVFF1OUdQSU5DeTBZSFF0ZEdGSUhWc0lOQzRJR2xzTENEUmd5RFF1dEMrMFlMUXZ0R0EwWXZSaFNEUXRkR0IwWUxSakNEUXNOR0MwWURRdU5DeDBZUFJnaUJqYkdGemN5b3ZYSEpjYm5Wc1cyTnNZWE56WFN4Y2NseHViMnhiWTJ4aGMzTmRJSHRjY2x4dUlDQnNhWE4wTFhOMGVXeGxPaUJ1YjI1bE8xeHlYRzU5WEhKY2JseHlYRzR2S2lEUXJkQzcwTFhRdk5DMTBMM1JndEdMSUdFc0lOR0RJTkM2MEw3Umd0QyswWURSaTlHRklOQzkwTFhSZ2lEUXV0QzcwTERSZ2RHQjBMQXNJTkdCMExIUmdOQ3cwWUhSaTlDeTBMRFF0ZEM4SU5DMDBMNGcwTFRRdGRHRTBMN1F1OUdDMEwzUmk5R0ZJTkdCMFlMUXVOQzcwTFhRdVNBcUwxeHlYRzVoT201dmRDaGJZMnhoYzNOZEtTQjdYSEpjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1TFhOcmFYQXRhVzVyT2lCaGRYUnZPMXh5WEc1OVhISmNibHh5WEc0dktpRFFvOUMvMFlEUXZ0R0owTERRdGRDOElOR0EwTERRc2RDKzBZTFJneURSZ1NEUXVOQzMwTDdRc2RHQTBMRFF0dEMxMEwzUXVOR1AwTHpRdUNBcUwxeHlYRzVwYldjZ2UxeHlYRzRnSUcxaGVDMTNhV1IwYURvZ01UQXdKVHRjY2x4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVmVnh5WEc1Y2NseHVMeW9nMEtQUXV0Q3cwTGZSaTlDeTBMRFF0ZEM4SU5DLzBMN1F2ZEdQMFlMUXZkR0QwWTRnMEwvUXRkR0EwTGpRdnRDMDBMalJoOUM5MEw3UmdkR0MwWXdnMExJZzBML1F2dEdDMEw3UXV0QzFJTkMwMExEUXZkQzkwWXZSaFNEUmd5QmhjblJwWTJ4bEtpOWNjbHh1WVhKMGFXTnNaU0ErSUNvZ0t5QXFJSHRjY2x4dUlDQnRZWEpuYVc0dGRHOXdPaUF4WlcwN1hISmNibjFjY2x4dVhISmNiaThxSU5DZDBMRFJnZEM3MExYUXROR0QwTFhRdkNEUmlOR0EwTGpSaE5HQzBZc2cwTFRRdTlHUElOQzQwTDNRdjlHRDBZTFF2dEN5SU5DNElOQzYwTDNRdnRDLzBMN1F1aUFxTDF4eVhHNXBibkIxZEN4Y2NseHVZblYwZEc5dUxGeHlYRzUwWlhoMFlYSmxZU3hjY2x4dWMyVnNaV04wSUh0Y2NseHVJQ0JtYjI1ME9pQnBibWhsY21sME8xeHlYRzU5WEhKY2JseHlYRzR2S2lEUW85QzAwTERRdTlHUDBMWFF2Q0RRc3RHQjBMVWcwTERRdmRDNDBMelFzTkdHMExqUXVDRFF1Q0RRdjlDMTBZRFF0ZEdGMEw3UXROR0xJTkMwMEx2Ump5RFF1OUdPMExUUXRkQzVMQ0RRdXRDKzBZTFF2dEdBMFl2UXRTRFF2OUdBMExYUXROQy8wTDdSaDlDNDBZTFFzTkM1SU5DNDBZVWcwTDNRdFNEUXVOR0IwTC9RdnRDNzBZelF0OUMrMExMUXNOR0MwWXdnS2k5Y2NseHVRRzFsWkdsaElDaHdjbVZtWlhKekxYSmxaSFZqWldRdGJXOTBhVzl1T2lCeVpXUjFZMlVwSUh0Y2NseHVJQ0FxSUh0Y2NseHVJQ0FnSUdGdWFXMWhkR2x2Ymkxa2RYSmhkR2x2YmpvZ01DNHdNVzF6SUNGcGJYQnZjblJoYm5RN1hISmNiaUFnSUNCaGJtbHRZWFJwYjI0dGFYUmxjbUYwYVc5dUxXTnZkVzUwT2lBeElDRnBiWEJ2Y25SaGJuUTdYSEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVMV1IxY21GMGFXOXVPaUF3TGpBeGJYTWdJV2x0Y0c5eWRHRnVkRHRjY2x4dUlDQWdJSE5qY205c2JDMWlaV2hoZG1sdmNqb2dZWFYwYnlBaGFXMXdiM0owWVc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVMeW9nMEtQUXROQ3cwTHZRdGRDOTBMalF0U0RRdE5DKzBML1F2dEM3MEwzUXVOR0MwTFhRdTlHTTBMM1JpOUdGSU5HQjBZTFF1TkM3MExYUXVTQXFMMXh5WEc1aElIdGNjbHh1SUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjY2x4dUlDQWdJR052Ykc5eU9pQnBibWhsY21sME8xeHlYRzU5WEhKY2JseHlYRzVpZFhSMGIyNGdlMXh5WEc0Z0lDQWdZbTl5WkdWeU9pQnViMjVsTzF4eVhHNTlJaXdpTHk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlhRzl0WEhKY2JpOHZJU0RRbnRHQjBMM1F2dEN5MEwzUXZ0QzVJTkNvMFlEUXVOR0UwWUpjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjAxdmJuUnpaWEp5WVhRbk8xeHlYRzRnSUNBZ2MzSmpPblZ5YkNnbkxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExuUjBaaWNwSUdadmNtMWhkQ2duZEhKMVpYUjVjR1VuS1N4Y2NseHVJQ0FnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEM1bGIzUW5LU0JtYjNKdFlYUW9KMlZ0WW1Wa1pHVmtMVzl3Wlc1MGVYQmxKeWtzWEhKY2JpQWdJQ0FnSUNBZ2RYSnNLQ2N1TGk5bWIyNTBMMDF2Ym5SelpYSnlZWFF1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcExGeHlYRzRnSUNBZ0lDQWdJSFZ5YkNnbkxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExuZHZabVl5SnlrZ1ptOXliV0YwS0NkM2IyWm1NaWNwTzF4eVhHNTlYSEpjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh5WEc0dkx5RWcwSlRRdnRDLzBMN1F1OUM5MExqUmd0QzEwTHZSak5DOTBZdlF0U0RRcU5HQTBMalJoTkdDMFl0Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0owOXpkMkZzWkNjN1hISmNiaUFnSUNCemNtTTZkWEpzS0NjdUxpOW1iMjUwTDA5emQyRnNaQzUwZEdZbktTQm1iM0p0WVhRb0ozUnlkV1YwZVhCbEp5a3NYSEpjYmlBZ0lDQWdJQ0FnZFhKc0tDY3VMaTltYjI1MEwwOXpkMkZzWkM1bGIzUW5LU0JtYjNKdFlYUW9KMlZ0WW1Wa1pHVmtMVzl3Wlc1MGVYQmxKeWtzWEhKY2JpQWdJQ0FnSUNBZ2RYSnNLQ2N1TGk5bWIyNTBMMDl6ZDJGc1pDNTNiMlptSnlrZ1ptOXliV0YwS0NkM2IyWm1KeWtzWEhKY2JpQWdJQ0FnSUNBZ2RYSnNLQ2N1TGk5bWIyNTBMMDl6ZDJGc1pDNTNiMlptTWljcElHWnZjbTFoZENnbmQyOW1aakluS1R0Y2NseHVmVnh5WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjY2x4dUx5OGhJT0tFbGpFZzBLSFJndEM0MEx2UmpDRFFxTkdBMExqUmhOR0MwTEJjY2x4dUxuUnBkR3hsSUh0Y2NseHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5UM04zWVd4a0p6dGNjbHh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklEWTBjSGc3WEhKY2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01URTNKVHRjY2x4dWZWeHlYRzR2THlFZzRvU1dNaURRb2RHQzBMalF1OUdNSU5DbzBZRFF1TkdFMFlMUXNGeHlYRzR1WTJGMFpXZHZjbmtnZTF4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZFBjM2RoYkdRbk8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2NseHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01qaHdlRHRjY2x4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeE5EWWxPMXh5WEc1OVhISmNiaTh2SVNEaWhKWXpJTkNoMFlMUXVOQzcwWXdnMEtqUmdOQzQwWVRSZ3RDd1hISmNiaTVqWVhKa0lIdGNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuVDNOM1lXeGtKenRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYSEpjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hISmNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNVFV3SlR0Y2NseHVmVnh5WEc1Y2NseHVMeThoSU9LRWxqUWcwS0hSZ3RDNDBMdlJqQ0RRcU5HQTBMalJoTkdDMExCY2NseHVMblJsZUhRZ2UxeHlYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2ROYjI1MGMyVnljbUYwSnp0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFNGNIZzdYSEpjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVRJeUpUdGNjbHh1ZlZ4eVhHNHZMeUVnNG9TV05TRFFvZEdDMExqUXU5R01JTkNvMFlEUXVOR0UwWUxRc0Z4eVhHNHVaR2x6Y0d4aGVTQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjA5emQyRnNaQ2M3WEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF6TTNCNE8xeHlYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV3TUNVN1hISmNibjBpTENKQWRYTmxJQ2QwZVhCdlozSmhjR2g1SnlCaGN5Qm1iMjUwTzF4eVhHNUFkWE5sSUNjdUxpOWhZbk4wY21GamRITXZkbUZ5YVdGaWJHVnpKeUJoY3lCMllYSTdYSEpjYmx4eVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2NseHVMeThoSU5DZTBMSFJpZEM0MExVZzBKM1FzTkdCMFlMUmdOQyswTG5RdXRDNFhISmNibUp2WkhsN1hISmNiaUFnSUNCQVpYaDBaVzVrSUM1MFpYaDBPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nZG1GeUxpUjNhR2wwWlR0Y2NseHVJQ0FnSUdOdmJHOXlPaUIyWVhJdUpHSnNZV05yTzF4eVhHNTlYSEpjYmx4eVhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2NseHVMeThoSU5DZjBZRFF1TkN4MExqUXN0Q3cwTDNRdU5DMUlOR0UwWVBSZ3RDMTBZRFFzQ0RRdWlEUXY5QyswTHZSZzF4eVhHNWNjbHh1TG5keVlYQndaWElnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEhKY2JpQWdJQ0J0YVc0dGFHVnBaMmgwT2lBeE1EQWxPMXh5WEc1OVhISmNibHh5WEc0dWJXRnBiaUI3WEhKY2JpQWdJQ0JtYkdWNE9pQXhJREVnWVhWMGJ6dGNjbHh1ZlZ4eVhHNWNjbHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYmk4dklTRFFuZEN3MFlIUmd0R0EwTDdRdWRDNjBMQWcwTHJRdnRDOTBZTFF0ZEM1MEwzUXRkR0EwTEJjY2x4dVhISmNibHRqYkdGemN5bzlYQ0pmWDJOdmJuUmhhVzVsY2x3aVhTQjdYSEpjYmlBZ0lDQnRZWGd0ZDJsa2RHZzZJR05oYkdNb2RtRnlMaVJqYjI1MFlXbHVaWEl0YzJGbVpTQXFJRElnS3lCMllYSXVKR052Ym5SaGFXNWxjaWs3WEhKY2JpQWdJQ0F2THlCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4eVhHNGdJQ0FnYldGeVoybHVPaUF3SUdGMWRHODdYSEpjYmlBZ0lDQndZV1JrYVc1bk9pQXdJSFpoY2k0a1kyOXVkR0ZwYm1WeUxYTmhabVU3WEhKY2JuMWNjbHh1WEhKY2JuTjJaM3RjY2x4dUlDQWdJR2hsYVdkb2REb2dkbUZ5TGlScFkyOXVMWE5wZW1VN1hISmNiaUFnSUNCM2FXUjBhRG9nZG1GeUxpUnBZMjl1TFhOcGVtVTdYSEpjYm4xY2NseHVYSEpjYmk4dlB5QlFReUFnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjY2x4dUx5OC9JRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4eVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb3hNRGcyTGprNGNIZ3BJSHRjY2x4dWZWeHlYRzVjY2x4dUx5OC9JRlJoWW14bGRDQWdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4eVhHNHZMejhnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhISmNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9Pams1TVM0NU9IQjRLU0I3WEhKY2JuMWNjbHh1WEhKY2JpOHZQeUJOYjJKcGJHVWdJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2NseHVMeTgvSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG8zTmpjdU9UaHdlQ2tnZTF4eVhHNTlYSEpjYmx4eVhHNHZMejhnVFc5aWFXeGxJQzBnYzIxaGJHd2dJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhISmNiaTh2UHlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNjbHh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURRM09TNDVPSEI0S1NCN1hISmNibjBpTENJdkx5QkRiMnh2Y25OY2NseHVKR0ZqWTJWdWREb2djbWRpS0RFNU5Td2dOeXdnTVRNcE8xeHlYRzRrWW14MVpUb2djbWRpS0RZMkxDQXhNRE1zSURFM09DazdYSEpjYmlSeVpXUTZJSEpuWWlneU1Ua3NJRFk0TENBMU5TazdYSEpjYmlSaFkzUnBkbVU2SUhKblltRW9NalUxTENBeU5UVXNJREkxTlN3Z01DNDFLVHRjY2x4dUpHZHlZWGs2SUhKblltRW9NalUxTENBeU5UVXNJREkxTlN3Z01DNHlLVHRjY2x4dVhISmNiaVJpYkdGamF6b2djbWRpS0RBc0lEQXNJREFwTzF4eVhHNGtkMmhwZEdVNklISm5ZaWd5TlRVc0lESTFOU3dnTWpVMUtUdGNjbHh1WEhKY2JpOHZJSE5wZW1WY2NseHVKR052Ym5SaGFXNWxjam9nTVRNd01IQjRPMXh5WEc0a1kyOXVkR0ZwYm1WeUxYTmhabVU2TVRWd2VEdGNjbHh1SkdsamIyNHRjMmw2WlRvZ01qUndlRHRjY2x4dVhISmNiaTh2SUcxbFpHbGhYSEpjYmlSdGIySnBiR1V0YzIxaGJHdzZJRFEzT1M0NU9IQjRPMXh5WEc0a2JXOWlhV3hsT2lBM05qY3VPVGh3ZUR0Y2NseHVKSFJoWW14bGREbzVPVEV1T1Rod2VEdGNjbHh1SkhCak9pQXhNRGcyTGprNGNIZzdYSEpjYmx4eVhHNHZMeUJoYm1sdFlYUnBiMjVjY2x4dUpIUnlZVzV6YVhScGIyNHRMV1JsWm1GMWJIUTZkSEpoYm5ObWIzSnRJREF1TTNNZ1pXRnpaVHRjY2x4dUpIUnlZVzV6Wm05eWJTMHRaR1ZtWVhWc2REb2djMk5oYkdVb01UQTNKU2s3WEhKY2JseHlYRzRpTENKQWRYTmxJQ2N1TGk5aFluTjBjbUZqZEhNdmRtRnlhV0ZpYkdWekp5QmhjeUIyWVhJN1hISmNibHh5WEc0dWFHVmhaR1Z5SUh0Y2NseHVYSEpjYmlBZ0lDQW1YMTlzYjJkdklIdGNjbHh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCMllYSXVKSFJ5WVc1emFYUnBiMjR0TFdSbFptRjFiSFE3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0psOWZiRzluYnpwb2IzWmxjaUI3WEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjJZWEl1SkhSeVlXNXpabTl5YlMwdFpHVm1ZWFZzZER0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQW1JSHRjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SURJd2NIZ2dNSEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWmZYMk52Ym5SaGFXNWxjaUI3WEhKY2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYSEpjYmlBZ0lDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQW1YMTloWTNScGIyNXpJSHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdJQ0FnSUdkaGNEb2dOREp3ZUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXVZV04wYVc5dUlIdGNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCMllYSXVKSFJ5WVc1emFYUnBiMjR0TFdSbFptRjFiSFE3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xtRmpkR2x2Ympwb2IzWmxjbnRjY2x4dUlDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIWmhjaTRrZEhKaGJuTm1iM0p0TFMxa1pXWmhkV3gwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmk1dFpXNTFJSHRjY2x4dVhISmNiaUFnSUNBbUlIdGNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ0lDQWdJR2RoY0RvZ05qQndlRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbVgxOXBkR1Z0SUh0Y2NseHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUIyWVhJdUpIUnlZVzV6YVhScGIyNHRMV1JsWm1GMWJIUTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSmw5ZmFYUmxiVHBvYjNabGNpQjdYSEpjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMllYSXVKSFJ5WVc1elptOXliUzB0WkdWbVlYVnNkRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbVgxOXNhVzVySUh0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc0aVhYMD0gKi8iLCIvKiDQo9C60LDQt9GL0LLQsNC10LwgYm94IHNpemluZyAqL1xyXG4qLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4vKiDQo9Cx0LjRgNCw0LXQvCDQstC90YPRgtGA0LXQvdC90LjQtSDQvtGC0YHRgtGD0L/RiyAqL1xyXG51bFtjbGFzc10sXHJcbm9sW2NsYXNzXSB7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLyog0KPQsdC40YDQsNC10Lwg0LLQvdC10YjQvdC40LUg0L7RgtGB0YLRg9C/0YsgKi9cclxuYm9keSxcclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNixcclxucCxcclxudWxbY2xhc3NdLFxyXG5vbFtjbGFzc10sXHJcbmxpLFxyXG5maWd1cmUsXHJcbmZpZ2NhcHRpb24sXHJcbmJsb2NrcXVvdGUsXHJcbmRsLFxyXG5kZCB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKiDQktGL0YHRgtCw0LLQu9GP0LXQvCDQvtGB0L3QvtCy0L3Ri9C1INC90LDRgdGC0YDQvtC50LrQuCDQv9C+LdGD0LzQvtC70YfQsNC90LjRjiDQtNC70Y8gYm9keSAqL1xyXG5ib2R5IHtcclxuICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVTcGVlZDtcclxufVxyXG5cclxuLyog0KPQtNCw0LvRj9C10Lwg0YHRgtCw0L3QtNCw0YDRgtC90YPRjiDRgdGC0LjQu9C40LfQsNGG0LjRjiDQtNC70Y8g0LLRgdC10YUgdWwg0LggaWwsINGDINC60L7RgtC+0YDRi9GFINC10YHRgtGMINCw0YLRgNC40LHRg9GCIGNsYXNzKi9cclxudWxbY2xhc3NdLFxyXG5vbFtjbGFzc10ge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi8qINCt0LvQtdC80LXQvdGC0YsgYSwg0YMg0LrQvtGC0L7RgNGL0YUg0L3QtdGCINC60LvQsNGB0YHQsCwg0YHQsdGA0LDRgdGL0LLQsNC10Lwg0LTQviDQtNC10YTQvtC70YLQvdGL0YUg0YHRgtC40LvQtdC5ICovXHJcbmE6bm90KFtjbGFzc10pIHtcclxuICB0ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6IGF1dG87XHJcbn1cclxuXHJcbi8qINCj0L/RgNC+0YnQsNC10Lwg0YDQsNCx0L7RgtGDINGBINC40LfQvtCx0YDQsNC20LXQvdC40Y/QvNC4ICovXHJcbmltZyB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKiDQo9C60LDQt9GL0LLQsNC10Lwg0L/QvtC90Y/RgtC90YPRjiDQv9C10YDQuNC+0LTQuNGH0L3QvtGB0YLRjCDQsiDQv9C+0YLQvtC60LUg0LTQsNC90L3Ri9GFINGDIGFydGljbGUqL1xyXG5hcnRpY2xlID4gKiArICoge1xyXG4gIG1hcmdpbi10b3A6IDFlbTtcclxufVxyXG5cclxuLyog0J3QsNGB0LvQtdC00YPQtdC8INGI0YDQuNGE0YLRiyDQtNC70Y8g0LjQvdC/0YPRgtC+0LIg0Lgg0LrQvdC+0L/QvtC6ICovXHJcbmlucHV0LFxyXG5idXR0b24sXHJcbnRleHRhcmVhLFxyXG5zZWxlY3Qge1xyXG4gIGZvbnQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi8qINCj0LTQsNC70Y/QtdC8INCy0YHQtSDQsNC90LjQvNCw0YbQuNC4INC4INC/0LXRgNC10YXQvtC00Ysg0LTQu9GPINC70Y7QtNC10LksINC60L7RgtC+0YDRi9C1INC/0YDQtdC00L/QvtGH0LjRgtCw0Lkg0LjRhSDQvdC1INC40YHQv9C+0LvRjNC30L7QstCw0YLRjCAqL1xyXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xyXG4gICoge1xyXG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcclxuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xyXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vKiDQo9C00LDQu9C10L3QuNC1INC00L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0YUg0YHRgtC40LvQtdC5ICovXHJcbmEge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbn0iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1ob21cclxuLy8hINCe0YHQvdC+0LLQvdC+0Lkg0KjRgNC40YTRglxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XHJcbiAgICBzcmM6dXJsKCcuLi9mb250L01vbnRzZXJyYXQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxyXG4gICAgICAgIHVybCgnLi4vZm9udC9Nb250c2VycmF0LmVvdCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnQvTW9udHNlcnJhdC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250L01vbnRzZXJyYXQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XHJcbn1cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vISDQlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INCo0YDQuNGE0YLRi1xyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnT3N3YWxkJztcclxuICAgIHNyYzp1cmwoJy4uL2ZvbnQvT3N3YWxkLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnQvT3N3YWxkLmVvdCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnQvT3N3YWxkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnQvT3N3YWxkLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpO1xyXG59XHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyEg4oSWMSDQodGC0LjQu9GMINCo0YDQuNGE0YLQsFxyXG4udGl0bGUge1xyXG4gICAgZm9udC1mYW1pbHk6ICdPc3dhbGQnO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogNjRweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMTclO1xyXG59XHJcbi8vISDihJYyINCh0YLQuNC70Ywg0KjRgNC40YTRgtCwXHJcbi5jYXRlZ29yeSB7XHJcbiAgICBmb250LWZhbWlseTogJ09zd2FsZCc7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDE0NiU7XHJcbn1cclxuLy8hIOKEljMg0KHRgtC40LvRjCDQqNGA0LjRhNGC0LBcclxuLmNhcmQge1xyXG4gICAgZm9udC1mYW1pbHk6ICdPc3dhbGQnO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNTAlO1xyXG59XHJcblxyXG4vLyEg4oSWNCDQodGC0LjQu9GMINCo0YDQuNGE0YLQsFxyXG4udGV4dCB7XHJcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMjIlO1xyXG59XHJcbi8vISDihJY1INCh0YLQuNC70Ywg0KjRgNC40YTRgtCwXHJcbi5kaXNwbGF5IHtcclxuICAgIGZvbnQtZmFtaWx5OiAnT3N3YWxkJztcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXNpemU6IDMzcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMTAwJTtcclxufSIsIkB1c2UgJ3R5cG9ncmFwaHknIGFzIGZvbnQ7XHJcbkB1c2UgJy4uL2Fic3RyYWN0cy92YXJpYWJsZXMnIGFzIHZhcjtcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyEg0J7QsdGJ0LjQtSDQndCw0YHRgtGA0L7QudC60LhcclxuYm9keXtcclxuICAgIEBleHRlbmQgLnRleHQ7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIuJHdoaXRlO1xyXG4gICAgY29sb3I6IHZhci4kYmxhY2s7XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyEg0J/RgNC40LHQuNCy0LDQvdC40LUg0YTRg9GC0LXRgNCwINC6INC/0L7Qu9GDXHJcblxyXG4ud3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5tYWluIHtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8hINCd0LDRgdGC0YDQvtC50LrQsCDQutC+0L3RgtC10LnQvdC10YDQsFxyXG5cclxuW2NsYXNzKj1cIl9fY29udGFpbmVyXCJdIHtcclxuICAgIG1heC13aWR0aDogY2FsYyh2YXIuJGNvbnRhaW5lci1zYWZlICogMiArIHZhci4kY29udGFpbmVyKTtcclxuICAgIC8vIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDAgdmFyLiRjb250YWluZXItc2FmZTtcclxufVxyXG5cclxuc3Zne1xyXG4gICAgaGVpZ2h0OiB2YXIuJGljb24tc2l6ZTtcclxuICAgIHdpZHRoOiB2YXIuJGljb24tc2l6ZTtcclxufVxyXG5cclxuLy8/IFBDICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtZWRpYSAobWF4LXdpZHRoOjEwODYuOThweCkge1xyXG59XHJcblxyXG4vLz8gVGFibGV0ICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuQG1lZGlhIChtYXgtd2lkdGg6OTkxLjk4cHgpIHtcclxufVxyXG5cclxuLy8/IE1vYmlsZSAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtZWRpYSAobWF4LXdpZHRoOjc2Ny45OHB4KSB7XHJcbn1cclxuXHJcbi8vPyBNb2JpbGUgLSBzbWFsbCAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8/ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5AbWVkaWEgKG1heC13aWR0aDogNDc5Ljk4cHgpIHtcclxufSIsIkB1c2UgJy4uL2Fic3RyYWN0cy92YXJpYWJsZXMnIGFzIHZhcjtcclxuXHJcbi5oZWFkZXIge1xyXG5cclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIHRyYW5zaXRpb246IHZhci4kdHJhbnNpdGlvbi0tZGVmYXVsdDtcclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvOmhvdmVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHZhci4kdHJhbnNmb3JtLS1kZWZhdWx0O1xyXG4gICAgfVxyXG5cclxuICAgICYge1xyXG4gICAgICAgIG1hcmdpbjogMjBweCAwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGFpbmVyIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2FjdGlvbnMge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZ2FwOiA0MnB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5hY3Rpb24ge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHRyYW5zaXRpb246IHZhci4kdHJhbnNpdGlvbi0tZGVmYXVsdDtcclxuICAgIH1cclxuXHJcbiAgICAuYWN0aW9uOmhvdmVye1xyXG4gICAgICAgIHRyYW5zZm9ybTogdmFyLiR0cmFuc2Zvcm0tLWRlZmF1bHQ7XHJcbiAgICB9XHJcbn1cclxuLm1lbnUge1xyXG5cclxuICAgICYge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZ2FwOiA2MHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIHRyYW5zaXRpb246IHZhci4kdHJhbnNpdGlvbi0tZGVmYXVsdDtcclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVtOmhvdmVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHZhci4kdHJhbnNmb3JtLS1kZWZhdWx0O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xpbmsge1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */