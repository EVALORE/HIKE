@charset "UTF-8";.advantages__title,.articles__title,.collection__title,.font-title,.hit__title,.instagram-posts__title,.new__title{font:400 64px/117% "Oswald"}.advantages__category,.article__title,.collection__price,.collection__suptitle,.font-category,.footer__link,.footer__title{font:400 28px/146% "Oswald"}.card__information,.font-card{font:400 18px/150% "Oswald"}.advantages__text,.font-text,body{font:400 18px/122% "Montserrat"}.font-display{font:400 33px/100% "Oswald"}body{background:#fff;color:#000}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:100%}.main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}[class*=__container]{max-width:1330px;margin:0 auto;padding:0 15px}svg{height:24px;width:24px}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,ol[class],p,ul[class]{margin:0}body{min-height:100vh;scroll-behavior:smooth;text-rendering:optimizeSpeed}ol[class],ul[class]{list-style:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img{max-width:100%;display:block}article>*+*{margin-top:1em}input,select,textarea{font:inherit}a{text-decoration:none;color:inherit}button{font:400 28px/146% "Oswald";background:0 0;border:1px solid #fff;color:#fff;padding:6px 60px 13px;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}@font-face{font-family:"Montserrat";src:url(../font/Montserrat.ttf) format("truetype"),url(../font/Montserrat.eot) format("embedded-opentype"),url(../font/Montserrat.woff) format("woff"),url(../font/Montserrat.woff2) format("woff2")}@font-face{font-family:"Oswald";src:url(../font/Oswald.ttf) format("truetype"),url(../font/Oswald.eot) format("embedded-opentype"),url(../font/Oswald.woff) format("woff"),url(../font/Oswald.woff2) format("woff2")}.image{position:relative;height:100%}.image__border{padding:50px 50px 0 0;border:1px solid #000}button:hover{background:#000}.card{border:1px solid #000;width:310px;height:334px}.card:hover .card__image,.header .action:hover,.header__logo:hover{-webkit-transform:scale(107%);-ms-transform:scale(107%);transform:scale(107%)}.card__image{height:272px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.card__information{border-top:1px solid #000;text-align:center;padding:4px 0}.card__price{color:#c3070d}.article{margin-right:130px}.article__title{margin-bottom:5px}.article__text{max-width:310px;height:108px}.article__bottom{padding-top:10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-top:1px solid #000}.header__logo{-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.header{margin:20px 0}.header__actions,.header__container,.menu{display:-webkit-box;display:-ms-flexbox;display:flex}.header__container{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__actions,.menu{gap:42px}.header .action{display:block}.menu{gap:60px}.header .action,.menu__item{-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.menu__item:hover{-webkit-transform:scale(107%);-ms-transform:scale(107%);transform:scale(107%)}.footer{margin-top:80px;color:#fff}.footer__top{background:#c3070d;padding:7px 0}.footer__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__column{margin-top:43px;margin-bottom:53px}.footer__top-column{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__decoration{-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);width:45px;height:45px}.footer__link{margin:0 7px 0 32px}.footer__bottom{background:#000}.footer__title{margin-bottom:15px}.list__link{margin-bottom:2px}.banner__cta{position:absolute;left:24px;bottom:24px}.banner__button{padding-left:90px;padding-right:90px}.banner__decoration{position:absolute;bottom:7px;right:9px}.banner__text{color:#fff;max-width:350px;margin:0 0 20px}.new{margin-top:70px}.new__title{margin-bottom:20px}.new__product{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.advantages{margin-top:70px}.advantages__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.advantages__content{max-width:331px}.advantages__category{margin-top:30px}.advantages__text{max-width:288px;margin-top:5px}.advantages__decoration{position:absolute;right:25px;bottom:25px}.advantages__border{padding:0 0 45px 45px;border:1px solid #000}.hit{margin-top:70px}.hit__title{margin-bottom:20px}.hit__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.hit__list{display:grid;gap:40px 20px;grid-template-columns:1fr 1fr}.collection__information{position:absolute;left:27px;bottom:25px}.collection__suptitle{margin-bottom:-2px;margin-left:3px}.collection__price{color:#c3070d;margin-top:-5px;margin-left:3px}.articles{margin-top:70px}.articles__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:30px}.articles__title{max-width:420px}.articles__content{display:-webkit-box;display:-ms-flexbox;display:flex}.instagram-posts{margin-top:70px}.instagram-posts__column img,.instagram-posts__title{margin-bottom:20px}.instagram-posts__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (prefers-reduced-motion:reduce){*{-webkit-animation-duration:.01ms!important;animation-duration:.01ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;-webkit-transition-duration:.01ms!important;-o-transition-duration:.01ms!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */