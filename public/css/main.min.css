@charset "UTF-8";*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,ol[class],p,ul[class]{margin:0}body{min-height:100vh;scroll-behavior:smooth;text-rendering:optimizeSpeed}ol[class],ul[class]{list-style:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img{max-width:100%;display:block}article>*+*{margin-top:1em}button,input,select,textarea{font:inherit}a{text-decoration:none;color:inherit}button{border:0}@font-face{font-family:"Montserrat";src:url(../font/Montserrat.ttf) format("truetype"),url(../font/Montserrat.eot) format("embedded-opentype"),url(../font/Montserrat.woff) format("woff"),url(../font/Montserrat.woff2) format("woff2")}@font-face{font-family:"Oswald";src:url(../font/Oswald.ttf) format("truetype"),url(../font/Oswald.eot) format("embedded-opentype"),url(../font/Oswald.woff) format("woff"),url(../font/Oswald.woff2) format("woff2")}.title{font:400 64px/117% "Oswald"}.category{font:400 28px/146% "Oswald"}.card{font:400 18px/150% "Oswald"}.text,body{font:400 18px/122% "Montserrat"}.display{font:400 33px/100% "Oswald"}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:100%}.main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}[class*=__container]{max-width:1290px;overflow:hidden;margin:0 auto;padding:0 30px}@media (prefers-reduced-motion:reduce){*{-webkit-animation-duration:.01ms!important;animation-duration:.01ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;-webkit-transition-duration:.01ms!important;-o-transition-duration:.01ms!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */